#include <iostream>
#include <vector>
using namespace std;

// Function to add an edge to the graph
void addEdge(vector<vector<int>>& graph, int src, int dest) {
    graph[src][dest] = 1;
    graph[dest][src] = 1;
}

// Function to display the adjacency matrix
void displayGraph(const vector<vector<int>>& graph) {
    int V = graph.size();

    cout << "Adjacency Matrix:" << endl;
    for (int i = 0; i < V; i++) {
        for (int j = 0; j < V; j++) {
            cout << graph[i][j] << " ";
        }
        cout << endl;
    }
}

// Driver program
int main() {
    int V, E;
    cout << "Enter the number of vertices in the graph: ";
    cin >> V;
    cout << "Enter the number of edges in the graph: ";
    cin >> E;

    // Create an empty adjacency matrix
    vector<vector<int>> graph(V, vector<int>(V, 0));

    cout << "Enter the edges (src, dest):" << endl;
    for (int i = 0; i < E; i++) {
        int src, dest;
        cin >> src >> dest;
        addEdge(graph, src, dest);
    }

    displayGraph(graph);

    return 0;
}


*/input:

Enter the number of vertices in the graph: 5
Enter the number of edges in the graph: 7
Enter the edges (src, dest):
0 1
0 3
1 2
1 3
1 4
2 4
3 4
/*

*/output:

Adjacency Matrix:
0 1 0 1 0 
1 0 1 1 1 
0 1 0 0 1 
1 1 0 0 1 
0 1 1 1 0 

/*